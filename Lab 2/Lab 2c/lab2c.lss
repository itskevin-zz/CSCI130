
lab2c.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000e6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  0000013a  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  0000015a  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000072  00000000  00000000  00000175  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000003f  00000000  00000000  000001e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000129  00000000  00000000  00000226  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  00000350  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000008b  00000000  00000000  00000370  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 71 00 	jmp	0xe2	; 0xe2 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#include <avr/io.h>
#define F_CPU 16000000UL

void main(void)
{
  DDRD = 0b11111100;  //set PD2-PD7 to output
  80:	8c ef       	ldi	r24, 0xFC	; 252
  82:	8a b9       	out	0x0a, r24	; 10
  DDRB = 0b00000011; //set PB0-PB1 to output and rest to input
  84:	83 e0       	ldi	r24, 0x03	; 3
  86:	84 b9       	out	0x04, r24	; 4
  PORTB = 0b00011100; //turn on internal pullups for PB4-PB2
  88:	8c e1       	ldi	r24, 0x1C	; 28
  8a:	85 b9       	out	0x05, r24	; 5

  while (1){
    if((PINB & 0b00000100) == 0) {
      PORTD = 0b00000100;
  8c:	74 e0       	ldi	r23, 0x04	; 4
    } else if ((PINB & 0b00011100) == 0){
      PORTD = 0b11111100;
      PORTB = 0b00011110;
    } else {
      PORTD = 0b00000000;
      PORTB = 0b00011100;
  8e:	2c e1       	ldi	r18, 0x1C	; 28
    } else if ((PINB & 0b00011000) == 0) {
      PORTD = 0b11111100;
    } else if ((PINB & 0b00010100) == 0){
      PORTD = 0b01111100;
    } else if ((PINB & 0b00011100) == 0){
      PORTD = 0b11111100;
  90:	9c ef       	ldi	r25, 0xFC	; 252
      PORTB = 0b00011110;
  92:	6e e1       	ldi	r22, 0x1E	; 30
    } else if ((PINB & 0b00001100) == 0) {
      PORTD = 0b00011100;
    } else if ((PINB & 0b00011000) == 0) {
      PORTD = 0b11111100;
    } else if ((PINB & 0b00010100) == 0){
      PORTD = 0b01111100;
  94:	5c e7       	ldi	r21, 0x7C	; 124
    if((PINB & 0b00000100) == 0) {
      PORTD = 0b00000100;
    } else if ((PINB & 0b00001000) == 0) {
      PORTD = 0b00001100;
    } else if ((PINB & 0b00010000) == 0) {
      PORTD = 0b00111100;
  96:	4c e3       	ldi	r20, 0x3C	; 60

  while (1){
    if((PINB & 0b00000100) == 0) {
      PORTD = 0b00000100;
    } else if ((PINB & 0b00001000) == 0) {
      PORTD = 0b00001100;
  98:	3c e0       	ldi	r19, 0x0C	; 12
  DDRD = 0b11111100;  //set PD2-PD7 to output
  DDRB = 0b00000011; //set PB0-PB1 to output and rest to input
  PORTB = 0b00011100; //turn on internal pullups for PB4-PB2

  while (1){
    if((PINB & 0b00000100) == 0) {
  9a:	1a 99       	sbic	0x03, 2	; 3
  9c:	02 c0       	rjmp	.+4      	; 0xa2 <main+0x22>
      PORTD = 0b00000100;
  9e:	7b b9       	out	0x0b, r23	; 11
  a0:	fc cf       	rjmp	.-8      	; 0x9a <main+0x1a>
    } else if ((PINB & 0b00001000) == 0) {
  a2:	1b 99       	sbic	0x03, 3	; 3
  a4:	02 c0       	rjmp	.+4      	; 0xaa <main+0x2a>
      PORTD = 0b00001100;
  a6:	3b b9       	out	0x0b, r19	; 11
  a8:	f8 cf       	rjmp	.-16     	; 0x9a <main+0x1a>
    } else if ((PINB & 0b00010000) == 0) {
  aa:	1c 99       	sbic	0x03, 4	; 3
  ac:	02 c0       	rjmp	.+4      	; 0xb2 <main+0x32>
      PORTD = 0b00111100;
  ae:	4b b9       	out	0x0b, r20	; 11
  b0:	f4 cf       	rjmp	.-24     	; 0x9a <main+0x1a>
    } else if ((PINB & 0b00001100) == 0) {
  b2:	83 b1       	in	r24, 0x03	; 3
  b4:	8c 70       	andi	r24, 0x0C	; 12
  b6:	11 f4       	brne	.+4      	; 0xbc <main+0x3c>
      PORTD = 0b00011100;
  b8:	2b b9       	out	0x0b, r18	; 11
  ba:	ef cf       	rjmp	.-34     	; 0x9a <main+0x1a>
    } else if ((PINB & 0b00011000) == 0) {
  bc:	83 b1       	in	r24, 0x03	; 3
  be:	88 71       	andi	r24, 0x18	; 24
  c0:	11 f4       	brne	.+4      	; 0xc6 <main+0x46>
      PORTD = 0b11111100;
  c2:	9b b9       	out	0x0b, r25	; 11
  c4:	ea cf       	rjmp	.-44     	; 0x9a <main+0x1a>
    } else if ((PINB & 0b00010100) == 0){
  c6:	83 b1       	in	r24, 0x03	; 3
  c8:	84 71       	andi	r24, 0x14	; 20
  ca:	11 f4       	brne	.+4      	; 0xd0 <main+0x50>
      PORTD = 0b01111100;
  cc:	5b b9       	out	0x0b, r21	; 11
  ce:	e5 cf       	rjmp	.-54     	; 0x9a <main+0x1a>
    } else if ((PINB & 0b00011100) == 0){
  d0:	83 b1       	in	r24, 0x03	; 3
  d2:	8c 71       	andi	r24, 0x1C	; 28
  d4:	19 f4       	brne	.+6      	; 0xdc <main+0x5c>
      PORTD = 0b11111100;
  d6:	9b b9       	out	0x0b, r25	; 11
      PORTB = 0b00011110;
  d8:	65 b9       	out	0x05, r22	; 5
  da:	df cf       	rjmp	.-66     	; 0x9a <main+0x1a>
    } else {
      PORTD = 0b00000000;
  dc:	1b b8       	out	0x0b, r1	; 11
      PORTB = 0b00011100;
  de:	25 b9       	out	0x05, r18	; 5
  e0:	dc cf       	rjmp	.-72     	; 0x9a <main+0x1a>

000000e2 <_exit>:
  e2:	f8 94       	cli

000000e4 <__stop_program>:
  e4:	ff cf       	rjmp	.-2      	; 0xe4 <__stop_program>
